const redux = require('redux')
const createStore=redux.createStore
const combineReducers=redux.combineReducers
const BUY_CAKE='BUY_CAKE'
const BUY_ICECREAM='BUY_ICECREAM'
function buyCake(){
    return{
        type:BUY_CAKE,
        info:'Cake Reducer'
    }
}
function buyIcecream(){
    return{
        type:'BUY_ICECREAM',
        info1:'IceCream Reducer'
    }
}


const initialIcecreamState={
    noOfIceCreams:20
}
const Cakereducer=(state=initialState,action)=>{
   switch(action.type){
       case BUY_CAKE:return{
           ...state,
           noOfCakes:state.initialCakeState-1
        }
       
        default:return state
   }

}
const IceCreamReducer=(state=initialState,action)=>{
    switch(action.type){
        case BUY_ICECREAM:return{
            ...state,
            noOfIceCreams:state.initialIcecreamState-1
        }
        default: return state
    }
}
const rootReducers=combineReducers({
    Cake:Cakereducer,
    IceCream:IceCreamReducer
})
const store=createStore(rootReducers)
console.log('Initial state action',store.getState())
const unsubscribe=store.subscribe(()=>console.log('updated state action',store.getState()))
store.dispatch(buyCake())
store.dispatch(buyCake())
store.dispatch(buyCake())
store.dispatch(buyIcecream())
store.dispatch(buyIcecream())
store.dispatch(buyIcecream())
unsubscribe()

